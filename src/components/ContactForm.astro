---
import { initEmailJS } from '../utils/emailjs';
---

<div class="container mx-auto px-6 relative" id="formulario-contacto">
  <div class="text-center mb-12">
    <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">
      ¿Tienes un proyecto en mente?
    </h2>
    <p class="text-lg text-slate-300 max-w-2xl mx-auto">
      Cuéntanos sobre tu proyecto y nos pondremos en contacto contigo para discutir cómo podemos ayudarte.
    </p>
  </div>

  <div class="max-w-3xl mx-auto">
    <div class="relative">
      <!-- Efecto de brillo de fondo -->
      <div class="absolute -inset-1 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-2xl blur-lg opacity-30 group-hover:opacity-40 transition duration-1000 group-hover:duration-200 animate-gradient-xy"></div>
      
      <!-- Contenedor principal -->
      <div class="relative bg-slate-900/90 backdrop-blur-xl border border-slate-800/50 rounded-2xl p-8 md:p-12 shadow-2xl">
        <!-- Iconos decorativos -->
        <div class="absolute -top-6 -right-6 bg-gradient-to-br from-indigo-500/20 to-purple-500/20 backdrop-blur-sm rounded-xl p-3 border border-indigo-500/20 animate-float">
          <svg class="w-6 h-6 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
          </svg>
        </div>
        
        <form id="contactForm" class="space-y-8">
          <div class="grid md:grid-cols-2 gap-6">
            <div class="relative group">
              <label for="nombre" class="block text-sm font-medium text-slate-300 mb-2 ml-1">Nombre</label>
              <div class="relative">
                <input 
                  type="text" 
                  id="nombre" 
                  name="nombre"
                  class="w-full bg-slate-800/50 border border-slate-700 rounded-xl px-4 py-3 text-white placeholder-slate-400 focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 transition-all duration-300"
                  placeholder="Tu nombre"
                  required
                />
                <div class="absolute inset-0 rounded-xl bg-gradient-to-r from-indigo-500/20 via-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
              </div>
            </div>
            
            <div class="relative group">
              <label for="email" class="block text-sm font-medium text-slate-300 mb-2 ml-1">Email</label>
              <div class="relative">
                <input 
                  type="email" 
                  id="email" 
                  name="email"
                  class="w-full bg-slate-800/50 border border-slate-700 rounded-xl px-4 py-3 text-white placeholder-slate-400 focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 transition-all duration-300"
                  placeholder="tu@email.com"
                  required
                />
                <div class="absolute inset-0 rounded-xl bg-gradient-to-r from-indigo-500/20 via-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
              </div>
            </div>
          </div>

          <div class="relative group">
            <label for="mensaje" class="block text-sm font-medium text-slate-300 mb-2 ml-1">Mensaje</label>
            <div class="relative">
              <textarea 
                id="mensaje" 
                name="mensaje"
                rows="5" 
                class="w-full bg-slate-800/50 border border-slate-700 rounded-xl px-4 py-3 text-white placeholder-slate-400 focus:outline-none focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 transition-all duration-300 resize-none"
                placeholder="Cuéntanos sobre tu proyecto..."
                required
              ></textarea>
              <div class="absolute inset-0 rounded-xl bg-gradient-to-r from-indigo-500/20 via-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
            </div>
          </div>

          <button 
            type="submit" 
            id="submitButton"
            class="w-full relative inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 text-white rounded-xl font-medium shadow-lg shadow-indigo-500/25 hover:shadow-indigo-500/50 transform hover:scale-[1.02] transition-all duration-300 group overflow-hidden"
          >
            <div class="absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-indigo-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            <span class="relative flex items-center gap-2">
              <span>Enviar Mensaje</span>
              <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
              </svg>
            </span>
          </button>

          <!-- Mensaje de estado -->
          <div id="statusMessage" class="hidden text-center py-4 px-6 rounded-xl mt-6 transform transition-all duration-300"></div>
        </form>

        <!-- Decoración inferior -->
        <div class="absolute -bottom-6 -left-6 bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-sm rounded-xl p-3 border border-purple-500/20 animate-float animation-delay-200">
          <svg class="w-6 h-6 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes gradient-xy {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animation-delay-200 {
    animation-delay: 200ms;
  }

  .animate-gradient-xy {
    animation: gradient-xy 15s ease infinite;
    background-size: 400% 400%;
  }
</style>

<script>
  import { initEmailJS, sendForm, type FormData } from '../utils/emailjs';

  // Inicializar EmailJS
  initEmailJS();

  // Obtener elementos del DOM
  const form = document.getElementById('contactForm') as HTMLFormElement;
  const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
  const statusMessage = document.getElementById('statusMessage');

  // Manejar el envío del formulario
  form?.addEventListener('submit', async (event) => {
    event.preventDefault();

    if (submitButton && form) {
      // Deshabilitar el botón y mostrar estado de carga
      submitButton.disabled = true;
      submitButton.innerHTML = `
        <div class="relative flex items-center gap-3">
          <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span>Enviando mensaje...</span>
        </div>
      `;

      // Obtener datos del formulario
      const formData: FormData = {
        nombre: (form.elements.namedItem('nombre') as HTMLInputElement).value,
        email: (form.elements.namedItem('email') as HTMLInputElement).value,
        mensaje: (form.elements.namedItem('mensaje') as HTMLTextAreaElement).value
      };

      // Enviar formulario
      const result = await sendForm(formData);

      if (result.success && statusMessage) {
        // Mostrar mensaje de éxito
        statusMessage.className = 'flex items-center justify-center gap-2 text-center py-4 px-6 rounded-xl mt-6 bg-green-500/20 text-green-300 border border-green-500/30 transform transition-all duration-300';
        statusMessage.innerHTML = `
          <svg class="w-5 h-5 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>¡Mensaje enviado con éxito! Nos pondremos en contacto contigo pronto.</span>
        `;
        statusMessage.style.display = 'flex';

        // Actualizar botón a estado de éxito
        submitButton.innerHTML = `
          <span class="relative flex items-center gap-2">
            <span>¡Mensaje Enviado!</span>
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
          </span>
        `;
        submitButton.classList.add('bg-green-500');

        // Limpiar formulario
        form.reset();

        // Restaurar botón después de 3 segundos
        setTimeout(() => {
          submitButton.disabled = false;
          submitButton.innerHTML = `
            <div class="absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-indigo-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            <span class="relative flex items-center gap-2">
              <span>Enviar Mensaje</span>
              <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
              </svg>
            </span>
          `;
          submitButton.classList.remove('bg-green-500');
          statusMessage.style.display = 'none';
        }, 3000);
      } else if (statusMessage) {
        // Mostrar mensaje de error
        statusMessage.className = 'flex items-center justify-center gap-2 text-center py-4 px-6 rounded-xl mt-6 bg-red-500/20 text-red-300 border border-red-500/30 transform transition-all duration-300';
        statusMessage.innerHTML = `
          <svg class="w-5 h-5 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>Hubo un error al enviar el mensaje. Por favor, intenta nuevamente.</span>
        `;
        statusMessage.style.display = 'flex';

        // Restaurar botón
        submitButton.disabled = false;
        submitButton.innerHTML = `
          <div class="absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-indigo-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
          <span class="relative flex items-center gap-2">
            <span>Enviar Mensaje</span>
            <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
            </svg>
          </span>
        `;
      }
    }
  });
</script> 